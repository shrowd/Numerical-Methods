import java.lang.Math;

public class GaussLegendre {
    public static double fun(double x) {
        return (0.3 * x + 0.2) / (1.4 - Math.cos(Math.pow(x, 2) + 0.3));
    }

    public static double[] generateWeights(int n) {
        double[] weight = new double[n];
        if (n == 2) {
            weight = new double[]{1.0000000000000000, 1.0000000000000000};
        }
        else if (n == 4) {
            weight = new double[]{0.6521451548625461, 0.6521451548625461,
                    0.3478548451374538, 0.3478548451374538};
        }
        else if (n == 6) {
            weight = new double[]{0.3607615730481386, 0.3607615730481386,
                    0.4679139345726910, 0.4679139345726910,
                    0.1713244923791704, 0.1713244923791704};
        }
        else if (n == 8) {
            weight = new double[]{0.3626837833783620, 0.3626837833783620,
                    0.3137066458778873, 0.3137066458778873,
                    0.2223810344533745, 0.2223810344533745,
                    0.1012285362903763, 0.1012285362903763};
        }
        else if (n == 10) {
            weight = new double[]{0.2955242247147529, 0.2955242247147529,
                    0.2692667193099963, 0.2692667193099963,
                    0.2190863625159820, 0.2190863625159820,
                    0.1494513491505806, 0.1494513491505806,
                    0.0666713443086881, 0.0666713443086881};
        }
        else if (n == 16) {
            weight = new double[]{0.1894506104550685, 0.1894506104550685,
                    0.1826034150449236, 0.1826034150449236,
                    0.1691565193950025, 0.1691565193950025,
                    0.1495959888165767, 0.1495959888165767,
                    0.1246289712555339, 0.1246289712555339,
                    0.0951585116824928, 0.0951585116824928,
                    0.0622535239386479, 0.0622535239386479,
                    0.0271524594117541, 0.0271524594117541};
        }
        return weight;
    }

    public static double[] generateAbscissa(int n) {
        double[] abcissa = new double[n];
        if (n == 2) {
            abcissa = new double[]{-0.5773502691896257, 0.5773502691896257};
        }
        else if (n == 4) {
            abcissa = new double[]{-0.3399810435848563, 0.3399810435848563,
                    -0.8611363115940526, 0.8611363115940526};
        }
        else if (n == 6) {
            abcissa = new double[]{0.6612093864662645, -0.6612093864662645,
                    -0.2386191860831969, 0.2386191860831969,
                    -0.9324695142031521, 0.9324695142031521};
        }
        else if (n == 8) {
            abcissa = new double[]{-0.1834346424956498, 0.1834346424956498,
                    -0.5255324099163290, 0.5255324099163290,
                    -0.7966664774136267, 0.7966664774136267,
                    -0.9602898564975363, 0.9602898564975363};
        }
        else if (n == 10) {
            abcissa = new double[]{-0.1488743389816312, 0.1488743389816312,
                    -0.4333953941292472, 0.4333953941292472,
                    -0.6794095682990244, 0.6794095682990244,
                    -0.8650633666889845, 0.8650633666889845,
                    -0.9739065285171717, 0.9739065285171717};
        }
        else if (n == 16) {
            abcissa = new double[]{-0.0950125098376374, 0.0950125098376374,
                    -0.2816035507792589, 0.2816035507792589,
                    -0.4580167776572274, 0.4580167776572274,
                    -0.6178762444026438, 0.6178762444026438,
                    -0.7554044083550030, 0.7554044083550030,
                    -0.8656312023878318, 0.8656312023878318,
                    -0.9445750230732326, 0.9445750230732326,
                    -0.9894009349916499, 0.9894009349916499};
        }
        return abcissa;
    }

    public static double integrate(double a, double b, int n) {
        double result = 0;

        double h = (b - a) / 2;
        double c = (b + a) / 2;

        double[] weight = generateWeights(n);
        double[] abcissa = generateAbscissa(n);

        for (int i = 0; i < n; i++) {
            result += weight[i] * fun(h * abcissa[i] + c);
        }

        result = result * h;

        return result;
    }

    public static void main(String[] args) {

        System.out.println("Kwadratury Gaussa–Legendre’a: " + integrate(1.2, 2.2, 10));
    }
}
